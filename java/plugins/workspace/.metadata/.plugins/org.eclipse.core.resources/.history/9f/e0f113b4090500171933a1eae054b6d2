package me.commandcraft.parkshooter;

import java.util.List;
import java.util.Set;

import org.apache.commons.lang.StringUtils;
import org.bukkit.Bukkit;
import org.bukkit.command.BlockCommandSender;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.command.ConsoleCommandSender;
import org.bukkit.command.RemoteConsoleCommandSender;
import org.bukkit.command.TabCompleter;
import org.bukkit.craftbukkit.v1_11_R1.CraftServer;
import org.bukkit.craftbukkit.v1_11_R1.command.CraftBlockCommandSender;
import org.bukkit.craftbukkit.v1_11_R1.entity.CraftMinecartCommand;
import org.bukkit.craftbukkit.v1_11_R1.entity.CraftPlayer;
import org.bukkit.entity.Entity;
import org.bukkit.entity.Player;
import org.bukkit.entity.minecart.CommandMinecart;
import org.bukkit.plugin.java.JavaPlugin;

import net.minecraft.server.v1_11_R1.EntityMinecartCommandBlock;
import net.minecraft.server.v1_11_R1.ICommandListener;
import net.minecraft.server.v1_11_R1.PlayerSelector;
import net.minecraft.server.v1_11_R1.RemoteControlCommandListener;

public class CommandExec {
	
	public static void init(JavaPlugin plugin) {
		Set<String> commands = plugin.getDescription().getCommands().keySet();
		String pack = CommandExec.class.getPackage().getName() + ".commands.";
		for (String command : commands) {
			try {
				Class<?> exec = Class.forName(pack + StringUtils.capitalize(command) + "Exec");
				plugin.getCommand(command).setExecutor((CommandExecutor) exec.newInstance());
			} catch (Exception e) {
				Logger.severe("Disable because can't load command: " + command);
				Bukkit.getPluginManager().disablePlugin(plugin);
			}
			try {
				Class<?> tab = Class.forName(pack + StringUtils.capitalize(command) + "Tab");
				plugin.getCommand(command).setTabCompleter((TabCompleter) tab.newInstance());
			} catch (Exception e) {}
		}
	}
	
	public static List getEntities(CommandSender sender, String p) {
		ICommandListener listener = getListener(sender);
		return PlayerSelector.getPlayers(listener, p, (Class<? extends T>) Entity.class);
	}
	
	private static ICommandListener getListener(CommandSender sender) {
        if (sender instanceof Player) {
            return ((CraftPlayer) sender).getHandle();
        }
        if (sender instanceof BlockCommandSender) {
            return ((CraftBlockCommandSender) sender).getTileEntity();
        }
        if (sender instanceof CommandMinecart) {
            return ((EntityMinecartCommandBlock) ((CraftMinecartCommand) sender).getHandle()).getCommandBlock();
        }
        if (sender instanceof RemoteConsoleCommandSender) {
            return RemoteControlCommandListener.getInstance();
        }
        if (sender instanceof ConsoleCommandSender) {
            return ((CraftServer) sender.getServer()).getServer();
        }
        return null;
    }
}
